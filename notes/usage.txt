

  sessionId := cookies("sessionId")

func AuthenticatedClient(w http.ResponseWriter) (*http.Client, error) {

  sessionId := cookies["sessionId"]

  if !sessionId {
    w.RedirectTo("/login/pick-provider")
  }

  result, client, err := omniauth.Authenticate(w, map[string]func{

    "GetToken": func() *omniauth.Token {
      // get tok or return nil
      sessionId
    },

    "PutToken": func(tok *omniauth.Token) {
      // save tok
      sessionId
    }

  })

  if result == omniauth.ResultShouldLogin {
    w.RedirectTo("/login/pick-provider")
  }

}

var authManager *omniauth.Manager
func main() {
  
  // setup omniauth
  oauth = omniauth.NewManager("GetToken": func(id string) *omniauth.Token {
    // get tok or return nil
      
  },

  "PutToken": func(id string, tok *omniauth.Token) {
    // save tok
    
  })

}


func RestController struct{}

func (r *RestController) Before(c context.Context) error {
  sessionID := GetOrCreateSessionID()
  o := authManager.WithID(sessionID)
  c.Data().Set("auth") = o
}

func (r *RestController) Read(c context.Context) error {

  auth := c.Data().Get("auth").(*omniauth.Manager)
  if auth.LoggedIn() {

  }
  auth.Get("...")
  auth.Client()...
 
}

func (r *RestController) Login(c context.Context) error {
  
  auth := c.Data().Get("auth").(*omniauth.Manager)

  if auth.LoggedIn() {
    goweb.Respond.WithRedirect("/")
  }

  providers := auth.Providers()
  renderTemplate("logingrid", objects.NewMap("Providers", providers))

}


// e.g.  /auth/github/login
func (r *AuthController) Callback(c context.Context) error {
  
  auth := c.Data().Get("auth").(*omniauth.Manager)

  code := c.FormParam("code")
  provider := c.FormParam("provider")

  err := auth.Exchange(provider, code)
  
}


